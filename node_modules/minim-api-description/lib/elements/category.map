{"version":3,"sources":["category.js"],"names":["namespace","ArrayElement","getElementClass","Category","args","element","value","metadata","attributes","get","undefined","result","children","filter","item","key","toValue","isEmpty","first","classes","contains","schemes","indexOf","register"],"mappings":";;;;;;;;kBAAe,UAAUA,SAAV,EAAqB;AAClC,MAAMC,eAAeD,UAAUE,eAAV,CAA0B,OAA1B,CAArB;;AAEA;;;;;;;;;;AAHkC,MAY5BC,QAZ4B;AAAA;;AAahC,wBAAqB;AAAA;;AAAA;;AAAA,wCAANC,IAAM;AAANA,YAAM;AAAA;;AAAA,iJACVA,IADU;;AAEnB,YAAKC,OAAL,GAAe,UAAf;AAFmB;AAGpB;;AAED;;;;;;;AAlBgC;AAAA;AAAA,+BAiFvBC,KAjFuB,EAiFhB;AACd,YAAMC,WAAW,KAAKC,UAAL,CAAgBC,GAAhB,CAAoB,UAApB,CAAjB;;AAEA,YAAI,CAACF,QAAL,EAAe;AACb,iBAAOG,SAAP;AACD;;AAED,YAAMC,SAASJ,SAASK,QAAT,CAAkBC,MAAlB,CAAyB;AAAA,iBAAQC,KAAKC,GAAL,CAASC,OAAT,OAAuBV,KAA/B;AAAA,SAAzB,CAAf;;AAEA,YAAIK,OAAOM,OAAX,EAAoB;AAClB,iBAAOP,SAAP;AACD;;AAED,eAAOC,OAAOO,KAAP,CAAaZ,KAApB;AACD;AA/F+B;AAAA;AAAA,0BAuBX;AACnB,eAAO,KAAKM,QAAL,CAAcC,MAAd,CAAqB;AAAA,iBAAQC,KAAKK,OAAL,CAAaC,QAAb,CAAsB,eAAtB,CAAR;AAAA,SAArB,CAAP;AACD;;AAED;;;;;;AA3BgC;AAAA;AAAA,0BAgCX;AACnB,eAAO,KAAKR,QAAL,CAAcC,MAAd,CAAqB;AAAA,iBAAQC,KAAKK,OAAL,CAAaC,QAAb,CAAsB,gBAAtB,CAAR;AAAA,SAArB,CAAP;AACD;AAlC+B;AAAA;AAAA,0BAoChB;AACd,eAAO,KAAKR,QAAL,CAAcC,MAAd,CAAqB;AAAA,iBAAQC,KAAKK,OAAL,CAAaC,QAAb,CAAsB,UAAtB,CAAR;AAAA,SAArB,CAAP;AACD;AAtC+B;AAAA;AAAA,0BAwCT;AACrB,eAAO,KAAKR,QAAL,CAAcC,MAAd,CAAqB;AAAA,iBAAQC,KAAKK,OAAL,CAAaC,QAAb,CAAsB,aAAtB,CAAR;AAAA,SAArB,CAAP;AACD;;AAED;;;;;;AA5CgC;AAAA;AAAA,0BAiDT;AACrB,eAAO,KAAKR,QAAL,CAAcC,MAAd,CAAqB;AAAA,iBAAQC,KAAKK,OAAL,CAAaC,QAAb,CAAsB,aAAtB,CAAR;AAAA,SAArB,CAAP;AACD;;AAED;;;;;;AArDgC;AAAA;AAAA,0BA0DhB;AACd,eAAO,KAAKR,QAAL,CAAcC,MAAd,CAAqB;AAAA,iBAAQC,KAAKT,OAAL,KAAiB,UAAzB;AAAA,SAArB,CAAP;AACD;;AAED;;;;;;AA9DgC;AAAA;AAAA,0BAmEd;AAChB,eAAO,KAAKO,QAAL,CAAcC,MAAd,CAAqB;AAAA,iBAAQC,KAAKT,OAAL,KAAiB,YAAzB;AAAA,SAArB,CAAP;AACD;;AAED;;;;;;AAvEgC;AAAA;AAAA,0BA4Ed;AAChB,YAAMgB,UAAU,CAAC,6BAAD,EAAgC,6BAAhC,EAA+D,eAA/D,CAAhB;AACA,eAAO,KAAKT,QAAL,CAAcC,MAAd,CAAqB;AAAA,iBAAQQ,QAAQC,OAAR,CAAgBR,KAAKT,OAArB,MAAkC,CAAC,CAA3C;AAAA,SAArB,CAAP;AACD;AA/E+B;;AAAA;AAAA,IAYXJ,YAZW;;AAkGlCD,YAAUuB,QAAV,CAAmB,UAAnB,EAA+BpB,QAA/B;AACD,C","file":"category.js","sourcesContent":["export default function (namespace) {\n  const ArrayElement = namespace.getElementClass('array');\n\n  /**\n   * @class Category\n   *\n   * @param {Array} content\n   * @param meta\n   * @param attributes\n   *\n   * @extends ArrayElement\n   */\n  class Category extends ArrayElement {\n    constructor(...args) {\n      super(...args);\n      this.element = 'category';\n    }\n\n    /**\n     * @name resourceGroups\n     * @type ArraySlice\n     * @memberof Category.prototype\n     */\n    get resourceGroups() {\n      return this.children.filter(item => item.classes.contains('resourceGroup'));\n    }\n\n    /**\n     * @name dataStructures\n     * @type ArraySlice\n     * @memberof Category.prototype\n     */\n    get dataStructures() {\n      return this.children.filter(item => item.classes.contains('dataStructures'));\n    }\n\n    get scenarios() {\n      return this.children.filter(item => item.classes.contains('scenario'));\n    }\n\n    get transitionGroups() {\n      return this.children.filter(item => item.classes.contains('transitions'));\n    }\n\n    /**\n     * @name authSchemes\n     * @type ArraySlice\n     * @memberof Category.prototype\n     */\n    get authSchemeGroups() {\n      return this.children.filter(item => item.classes.contains('authSchemes'));\n    }\n\n    /**\n     * @name resources\n     * @type ArraySlice\n     * @memberof Category.prototype\n     */\n    get resources() {\n      return this.children.filter(item => item.element === 'resource');\n    }\n\n    /**\n     * @name transitions\n     * @type ArraySlice\n     * @memberof Category.prototype\n     */\n    get transitions() {\n      return this.children.filter(item => item.element === 'transition');\n    }\n\n    /**\n     * @name authSchemes\n     * @type ArraySlice\n     * @memberof Category.prototype\n     */\n    get authSchemes() {\n      const schemes = ['Basic Authentication Scheme', 'Token Authentication Scheme', 'OAuth2 Scheme'];\n      return this.children.filter(item => schemes.indexOf(item.element) !== -1);\n    }\n\n    metadata(value) {\n      const metadata = this.attributes.get('metadata');\n\n      if (!metadata) {\n        return undefined;\n      }\n\n      const result = metadata.children.filter(item => item.key.toValue() === value);\n\n      if (result.isEmpty) {\n        return undefined;\n      }\n\n      return result.first.value;\n    }\n  }\n\n  namespace.register('category', Category);\n}\n"]}