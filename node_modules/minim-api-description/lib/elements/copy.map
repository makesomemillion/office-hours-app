{"version":3,"sources":["copy.js"],"names":["namespace","StringElement","getElementClass","ArrayElement","Object","getOwnPropertyNames","prototype","includes","defineProperty","get","children","filter","item","element","Copy","args","attributes","value","set","register"],"mappings":";;;;;;;;kBAAe,UAAUA,SAAV,EAAqB;AAClC,MAAMC,gBAAgBD,UAAUE,eAAV,CAA0B,QAA1B,CAAtB;AACA,MAAMC,eAAeH,UAAUE,eAAV,CAA0B,OAA1B,CAArB;;AAEA;;;;;AAKA,MAAI,EAACE,OAAOC,mBAAP,CAA2BF,aAAaG,SAAxC,EAAmDC,OAAnD,CAA4D,MAA5D,CAAD,QAAJ,EAA0E;AACxEH,WAAOI,cAAP,CAAsBL,aAAaG,SAAnC,EAA8C,MAA9C,EAAsD;AACpDG,SADoD,iBAC9C;AACJ,eAAO,KAAKC,QAAL,CAAcC,MAAd,CAAqB;AAAA,iBAAQC,KAAKC,OAAL,KAAiB,MAAzB;AAAA,SAArB,CAAP;AACD;AAHmD,KAAtD;AAKD;;AAED;;;;;;;;;;AAjBkC,MA0B5BC,IA1B4B;AAAA;;AA2BhC,oBAAqB;AAAA;;AAAA;;AAAA,wCAANC,IAAM;AAANA,YAAM;AAAA;;AAAA,yIACVA,IADU;;AAEnB,YAAKF,OAAL,GAAe,MAAf;AAFmB;AAGpB;;AAED;;;;;;;AAhCgC;AAAA;AAAA,0BAqCd;AAChB,eAAO,KAAKG,UAAL,CAAgBP,GAAhB,CAAoB,aAApB,CAAP;AACD,OAvC+B;AAAA,wBAyChBQ,KAzCgB,EAyCT;AACrB,aAAKD,UAAL,CAAgBE,GAAhB,CAAoB,aAApB,EAAmCD,KAAnC;AACD;AA3C+B;;AAAA;AAAA,IA0BfhB,aA1Be;;AA8ClCD,YAAUmB,QAAV,CAAmB,MAAnB,EAA2BL,IAA3B;AACD,C","file":"copy.js","sourcesContent":["export default function (namespace) {\n  const StringElement = namespace.getElementClass('string');\n  const ArrayElement = namespace.getElementClass('array');\n\n  /**\n   * @name copy\n   * @type Copy\n   * @memberof Element.prototype\n   */\n  if (!Object.getOwnPropertyNames(ArrayElement.prototype).includes('copy')) {\n    Object.defineProperty(ArrayElement.prototype, 'copy', {\n      get() {\n        return this.children.filter(item => item.element === 'copy');\n      },\n    });\n  }\n\n  /**\n   * @class Copy\n   *\n   * @param {string} content\n   * @param meta\n   * @param attributes\n   *\n   * @extends StringElement\n   */\n  class Copy extends StringElement {\n    constructor(...args) {\n      super(...args);\n      this.element = 'copy';\n    }\n\n    /**\n     * @name contentType\n     * @type StringElement\n     * @memberof Copy.prototype\n     */\n    get contentType() {\n      return this.attributes.get('contentType');\n    }\n\n    set contentType(value) {\n      this.attributes.set('contentType', value);\n    }\n  }\n\n  namespace.register('copy', Copy);\n}\n"]}