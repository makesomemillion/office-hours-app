{"version":3,"sources":["enum.js"],"names":["namespace","ArrayElement","getElementClass","Enum","content","meta","attributes","toElement","element","get","values","enumerations","Array","isArray","set","Element","register"],"mappings":";;;;;;;;kBAAe,UAAUA,SAAV,EAAqB;AAClC,MAAMC,eAAeD,UAAUE,eAAV,CAA0B,OAA1B,CAArB;;AAEA;;;;;;;;;;AAHkC,MAY5BC,IAZ4B;AAAA;;AAahC,kBAAYC,OAAZ,EAAqBC,IAArB,EAA2BC,UAA3B,EAAuC;AAAA;;AAAA,8GAC/BN,UAAUO,SAAV,CAAoBH,OAApB,CAD+B,EACDC,IADC,EACKC,UADL;;AAErC,YAAKE,OAAL,GAAe,MAAf;AAFqC;AAGtC;;AAED;;;;;;;AAlBgC;AAAA;AAAA,0BAuBb;AACjB,eAAO,KAAKF,UAAL,CAAgBG,GAAhB,CAAoB,cAApB,CAAP;AACD,OAzB+B;AAAA,wBA2BfC,MA3Be,EA2BP;AACvB,YAAIC,qBAAJ;;AAEA,YAAID,kBAAkBT,YAAtB,EAAoC;AAClCU,yBAAeD,MAAf;AACD,SAFD,MAEO,IAAIE,MAAMC,OAAN,CAAcH,MAAd,CAAJ,EAA2B;AAChCC,yBAAe,IAAIV,YAAJ,CAAiBS,MAAjB,CAAf;AACD,SAFM,MAEA;AACLC,yBAAe,IAAIV,YAAJ,EAAf;AACD;;AAED,aAAKK,UAAL,CAAgBQ,GAAhB,CAAoB,cAApB,EAAoCH,YAApC;AACD;AAvC+B;;AAAA;AAAA,IAYfX,UAAUe,OAZK;;AA0ClCf,YAAUgB,QAAV,CAAmB,MAAnB,EAA2Bb,IAA3B;AACD,C","file":"enum.js","sourcesContent":["export default function (namespace) {\n  const ArrayElement = namespace.getElementClass('array');\n\n  /**\n   * @class Enum\n   *\n   * @param {Element} content\n   * @param meta\n   * @param attributes\n   *\n   * @extends Element\n   */\n  class Enum extends namespace.Element {\n    constructor(content, meta, attributes) {\n      super(namespace.toElement(content), meta, attributes);\n      this.element = 'enum';\n    }\n\n    /**\n     * @name enumerations\n     * @type ArrayElement\n     * @memberof Enum.prototype\n     */\n    get enumerations() {\n      return this.attributes.get('enumerations');\n    }\n\n    set enumerations(values) {\n      let enumerations;\n\n      if (values instanceof ArrayElement) {\n        enumerations = values;\n      } else if (Array.isArray(values)) {\n        enumerations = new ArrayElement(values);\n      } else {\n        enumerations = new ArrayElement();\n      }\n\n      this.attributes.set('enumerations', enumerations);\n    }\n  }\n\n  namespace.register('enum', Enum);\n}\n"]}