{"version":3,"sources":["parse-result.js"],"names":["namespace","options","minim","base","Element","StringElement","getElementClass","ArrayElement","ParseResult","args","element","children","filter","item","classes","contains","first","Annotation","attributes","get","value","set","SourceMap","content","map","toValue","elements","Array","Object","getOwnPropertyNames","prototype","includes","defineProperty","sourceMap","undefined","use","register"],"mappings":"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","file":"parse-result.js","sourcesContent":["/*\n * Parse result-specific refract elements.\n *\n * General structure:\n *\n * + ParseResult\n *   + Annotation\n */\n\nimport apiDescription from 'minim-api-description';\n\nexport function namespace(options) {\n  const minim = options.base;\n  const { Element } = minim;\n  const StringElement = minim.getElementClass('string');\n  const ArrayElement = minim.getElementClass('array');\n\n  /**\n   * @class ParseResult\n   *\n   * @param {Array} content\n   * @param meta\n   * @param attributes\n   *\n   * @extends ArrayElement\n   */\n  class ParseResult extends ArrayElement {\n    constructor(...args) {\n      super(...args);\n      this.element = 'parseResult';\n    }\n\n    /**\n     * @name api\n     * @type Category\n     * @memberof ParseResult.prototype\n     */\n    get api() {\n      return this.children.filter(item => item.classes.contains('api')).first;\n    }\n\n    /**\n     * @name annotations\n     * @type ArraySlice\n     * @memberof ParseResult.prototype\n     */\n    get annotations() {\n      return this.children.filter(item => item.element === 'annotation');\n    }\n\n    /**\n     * @name warnings\n     * @type ArraySlice\n     * @memberof ParseResult.prototype\n     */\n    get warnings() {\n      return this.children\n        .filter(item => item.element === 'annotation' && item.classes.contains('warning'));\n    }\n\n    /**\n     * @name errors\n     * @type ArraySlice\n     * @memberof ParseResult.prototype\n     */\n    get errors() {\n      return this.children\n        .filter(item => item.element === 'annotation' && item.classes.contains('error'));\n    }\n  }\n\n  /**\n   * @class Annotation\n   *\n   * @param {string} content\n   * @param meta\n   * @param attributes\n   *\n   * @extends StringElement\n   */\n  class Annotation extends StringElement {\n    constructor(...args) {\n      super(...args);\n      this.element = 'annotation';\n    }\n\n    get code() {\n      return this.attributes.get('code');\n    }\n\n    set code(value) {\n      this.attributes.set('code', value);\n    }\n  }\n\n  /**\n   * @class SourceMap\n   *\n   * @param {Array} content\n   * @param meta\n   * @param attributes\n   *\n   * @extends ArrayElement\n   */\n  class SourceMap extends minim.elements.Array {\n    constructor(...args) {\n      super(...args);\n      this.element = 'sourceMap';\n    }\n\n    // Override toValue because until Refract 1.0\n    // sourceMap is special element that contains array of array\n    // TODO Remove in next minor release\n    toValue() {\n      return this.content.map(value => value.map(element => element.toValue()));\n    }\n  }\n\n  /**\n   * @name sourceMapValue\n   * @type Array\n   * @memberof Element.prototype\n   */\n  if (!Object.getOwnPropertyNames(Element.prototype).includes('sourceMapValue')) {\n    Object.defineProperty(Element.prototype, 'sourceMapValue', {\n      get() {\n        const sourceMap = this.attributes.get('sourceMap');\n\n        if (sourceMap) {\n          return sourceMap.first.toValue();\n        }\n\n        return undefined;\n      },\n    });\n  }\n\n  minim\n    .use(apiDescription)\n    .register('parseResult', ParseResult)\n    .register('annotation', Annotation)\n    .register('sourceMap', SourceMap);\n}\n\nexport default { namespace };\n"]}